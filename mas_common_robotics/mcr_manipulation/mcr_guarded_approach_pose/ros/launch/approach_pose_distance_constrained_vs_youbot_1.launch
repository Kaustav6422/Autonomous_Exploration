<?xml version="1.0"?>
<launch>
    <group ns="mcr_manipulation/guarded_motion">
        <node pkg="mcr_geometric_relation_monitors" type="component_wise_pose_error_monitor_node"
                name="pose_error_monitor" output="screen" respawn="true">

            <!-- the cycle rate of the node (in Hz) -->
            <param name="loop_rate" type="double" value="20.0" />

            <!-- the threshold for detecting if is within tolerance (in meters) -->
            <param name="threshold_linear_z" type="double" value="0.01" />
        </node>

        <node pkg="mcr_arm_motions" type="cartesian_motion_node"
                name="cartesian_motion" output="screen">

            <!-- the cycle rate of the node (in Hz) -->
            <param name="loop_rate" type="double" value="10.0" />

            <!-- the duration of the arm motion (in seconds) -->
            <param name="motion_duration" type="double" value="5.0"/>

            <remap from="~event_out" to="/guarded_approach_pose/coordinator/motion_feedback"/>
            <remap from="~velocity_command" to="/arm_1/arm_controller/cartesian_velocity_command"/>
        </node>

        <node pkg="mcr_guarded_approach_pose" type="distance_constrained_node"
                name="distance_constrained" output="screen">

            <!-- the cycle rate of the node (in Hz) -->
            <param name="loop_rate" type="double" value="25.0"/>

            <!-- the elements of a component-wise pose error to be checked if they are
                within tolerance (e.g. this checks the linear tolerance on the Z axis -->
            <rosparam param="desired_tolerances">
                - 'linear_z'
            </rosparam>

            <remap from="~start_monitor"
                   to="/mcr_manipulation/guarded_motion/pose_error_monitor/event_in"/>
            <remap from="~start_cartesian_motion"
                   to="/mcr_manipulation/guarded_motion/cartesian_motion/event_in"/>
            <remap from="~monitor_feedback"
                   to="/mcr_manipulation/guarded_motion/pose_error_monitor/feedback"/>
            <remap from="~event_out"
                   to="/mcr_manipulation/guarded_approach_pose/coordinator/event_in"/>
        </node>
    </group>

    <group ns="mcr_manipulation/guarded_approach_pose">
        <node pkg="mcr_pose_generator" type="pose_publisher_node"
                name="pose_publisher" output="screen">

            <!-- the node cycle rate (in hz) -->
            <param name="loop_rate" type="double" value="10.0"/>

            <!-- desired pose -->
            <param name="pose_frame" type="str" value="base_link"/>
            <param name="pose_position_x" type="double" value="0.0"/>
            <param name="pose_position_y" type="double" value="0.0"/>
            <!-- This is value is defined for a platform height of 10 cm and taking into
                consideration that the base_link's height is defined above the wheels -->
            <param name="pose_position_z" type="double" value="0.0325"/>
            <param name="pose_orientation_x" type="double" value="0.0"/>
            <param name="pose_orientation_y" type="double" value="0.0"/>
            <param name="pose_orientation_z" type="double" value="0.0"/>
            <param name="pose_orientation_w" type="double" value="1.0"/>
        </node>

        <node pkg="mcr_common_converters" type="transform_to_pose_converter_node"
                name="pose_converter" output="screen">

            <!-- the cycle rate of the node (in Hz) -->
            <param name="loop_rate" type="double" value="10.0" />

            <param name="reference_frame" type="str" value="base_link"/>
            <param name="target_frame" type="str" value="gripper_tip_link"/>
        </node>

        <node pkg="mcr_manipulation_measurers" type="component_wise_pose_error_calculator_node"
                name="pose_error_calculator" output="screen">

            <!-- the cycle rate of the node (in seconds) -->
            <param name="loop_rate" type="double" value="20.0"/>

            <remap from="~pose_1"
                   to="/mcr_manipulation/guarded_approach_pose/pose_publisher/pose_out"/>
            <remap from="~pose_2"
                   to="/mcr_manipulation/guarded_approach_pose/pose_converter/converted_pose"/>
            <remap from="~pose_error"
                   to="/mcr_manipulation/guarded_motion/pose_error_monitor/pose_error"/>
        </node>

        <!--node pkg="mcr_arm_motions" type="twist_publisher_node"
                name="twist_publisher" output="screen">

            <param name="loop_rate" type="double" value="10.0"/>

            <param name="twist_frame" type="str" value="gripper_tip_link"/>
            <param name="twist_linear_x" type="double" value="-1.0"/>
            <param name="twist_linear_z" type="double" value="0.9"/>

            <remap from="~twist_out"
                   to="/mcr_manipulation/guarded_motion/cartesian_motion/desired_velocity"/>
        </node-->

        <node pkg="mcr_guarded_approach_pose" type="approach_pose_distance_constrained_node"
                name="coordinator" output="screen">

            <!-- the node cycle rate (in hz) -->
            <param name="loop_rate" type="double" value="30.0"/>

            <remap from="~start_calculator"
                   to="/mcr_manipulation/guarded_approach_pose/pose_error_calculator/event_in"/>
            <remap from="~start_guarded_approach"
                   to="/mcr_manipulation/guarded_motion/distance_constrained/event_in"/>
            <remap from="~start_pose_publisher"
                   to="/mcr_manipulation/guarded_approach_pose/pose_publisher/event_in"/>
            <remap from="~start_pose_converter"
                   to="/mcr_manipulation/guarded_approach_pose/pose_converter/event_in"/>
            <remap from="~start_twist_publisher"
                   to="/mcr_manipulation/guarded_approach_pose/twist_publisher/event_in"/>
        </node>
    </group>

</launch>
